name: CI

on:
  push:
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  
  clippy:
      name: Clippy
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v1
        - uses: actions-rs/toolchain@v1
          id: toolchain
          with:
            profile: minimal
            toolchain: stable
            components: clippy
        - uses: actions-rs/clippy-check@v1
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            args: -- -D warnings
  
  build:
    name: ${{ matrix.job.os }} (${{ matrix.job.target }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { os: ubuntu-20.04 , target: x86_64-unknown-linux-gnu    }
          - { os: macos-10.15  , target: x86_64-apple-darwin         }
          - { os: windows-2020 , target: x86_64-pc-windows-gnu       }
    steps:
    - name: Checkout source code
      uses: actions/checkout@v2
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.job.target }}
        override: true
        profile: minimal # minimal component installation (ie, no documentation)
    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --target=${{ matrix.job.target }} ${{ steps.test-options.outputs.CARGO_TEST_OPTIONS}}
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        use-cross: ${{ matrix.job.use-cross }}
        command: build
        args: --release --target=${{ matrix.job.target }}
